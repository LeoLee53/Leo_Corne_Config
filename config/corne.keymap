/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        home_row_left: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };

        home_row_right: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            require-prior-idle-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
            require-prior-idle-ms = <120>;
            timeout-ms = <30>;
            layers = <0 1 2>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
            require-prior-idle-ms = <120>;
            timeout-ms = <30>;
            layers = <0 1 2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <27 28>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <27 26>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <26 28>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
            timeout-ms = <30>;
            require-prior-idle-ms = <120>;
            layers = <0 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&none  &kp Q                          &kp W                      &kp E                        &kp R                      &kp T        &kp Y      &kp U                        &kp I                          &kp O                        &kp P                               &none
&none  &home_row_left LEFT_CONTROL A  &home_row_left LEFT_ALT S  &home_row_left LEFT_SHIFT D  &home_row_left LEFT_GUI F  &kp G        &kp H      &home_row_right RIGHT_GUI J  &home_row_right RIGHT_SHIFT K  &home_row_right RIGHT_ALT L  &home_row_right RIGHT_CONTROL SEMI  &kp SQT
&none  &kp Z                          &kp X                      &kp C                        &kp V                      &kp B        &kp N      &kp M                        &kp COMMA                      &kp DOT                      &kp FSLH                            &none
                                                                 &mo 3                        &mo 1                      &kp ENTER    &kp SPACE  &mo 2                        &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB           &kp LS(N1)    &kp LS(N2)    &kp LS(N3)    &kp LS(N4)    &kp LS(N5)    &kp LS(N6)     &kp LS(N7)     &kp LS(N8)     &kp LS(N9)        &kp LS(N0)         &kp BACKSLASH
&kp LEFT_CONTROL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp MINUS      &kp EQUAL      &kp GRAVE      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&none             &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0        &kp LS(MINUS)  &kp LS(EQUAL)  &kp LS(GRAVE)  &kp LEFT_BRACE    &kp RIGHT_BRACE    &none
                                              &none         &none         &kp SPACE     &kp RET        &none          &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&none       &kp F1          &kp F2        &kp F3             &kp F4           &kp F5              &kp F6    &kp F7    &kp F8        &kp F9     &kp F10  &none
&none       &kp K_PREVIOUS  &kp K_NEXT    &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_PLAY_PAUSE    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &none    &none
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4        &none     &none     &none         &none      &none    &none
                                          &none              &trans           &kp SPACE           &none     &none     &none
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mkp LCLK       &trans          &mkp RCLK        &trans  &trans
                        &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };
};
